(ns learn-clojure.euler-2)

;; https://projecteuler.net/problem=2
;; Each new term in the Fibonacci sequence is generated by adding the previous two terms.
;; By starting with 1 and 2, the first 10 terms will be:
;;
;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;;
;; By considering the terms in the Fibonacci sequence whose values do not exceed four million,
;; find the sum of the even-valued terms.

(defn sum-of-even-fibon-numbers [bound]
  (loop [a 1
         b 1
         sum 0]
    (if (>= b bound)
      sum
      (recur b
             (+ a b)
             (if (= 1 (mod b 2))
               sum
               (+ sum b))))))

(defn sum-of-even-fibon-numbers-v2 [bound]
  (loop [b 1
         c 2
         sum 0]
    (if (>= c bound)
      sum
      (recur (+ b c c)
             (+ b b c c c)
             (+ sum c)))))

(defn sum-of-even-fibon-numbers-v3 [bound] (
                                            (fn [b c sum]
                                              (if (>= c bound)
                                                sum
                                                (recur (+ b c c)
                                                       (+ b b c c c)
                                                       (+ sum c))))
                                            1 2 0))

;; (println (time (sum-of-even-fibon-numbers-v3 4000000)))
